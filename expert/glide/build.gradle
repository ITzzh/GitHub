buildscript {
    repositories {
        jcenter()
        google()
        maven {
            url "https://oss.sonatype.org/content/repositories/snapshots"
        }
    }

    dependencies {
        classpath "com.android.tools.build:gradle:${ANDROID_GRADLE_VERSION}"
        classpath "org.kt3k.gradle.plugin:coveralls-gradle-plugin:${COVERALLS_GRADLE_VERSION}"
    }
}

// See http://blog.joda.org/2014/02/turning-off-doclint-in-jdk-8-javadoc.html.
if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }
}

subprojects { project ->
    tasks.withType(JavaCompile) {
        sourceCompatibility = 1.7
        targetCompatibility = 1.7

        options.bootClasspath = "${System.getProperty('java.home')}/lib/rt.jar"
        // gifencoder is a legacy project that has a ton of warnings and is basically never
        // modified, so we're not going to worry about cleaning it up.
        if ("gifencoder" != project.getName()) {
          options.compilerArgs \
                << "-Xlint:all" << "-Werror" \
                /*
                 * Java expects every annotation to have a processor, but we use
                 * javax.annotation.Nullable, which doesn't have one.
                 */ \
                << "-Xlint:-processing" \
                /*
                 * See https://github.com/google/dagger/issues/945
                 * and https://bugs.openjdk.java.net/browse/JDK-8190452
                 */ \
                << "-Xlint:-classfile"
        }
    }

    // Avoid issues like #2452.
    tasks.withType(Jar) {
        duplicatesStrategy = DuplicatesStrategy.FAIL
    }

    project.afterEvaluate {
        if (project.hasProperty("android")) {
            android {
                lintOptions {
                    warningsAsErrors true
                    quiet true
                }
            }
        }
    }
}

subprojects { project ->
    repositories {
        jcenter()
        maven {
            url "https://oss.sonatype.org/content/repositories/snapshots"
        }
        maven {
            url "https://maven.google.com"
        }
    }

    apply plugin: 'checkstyle'

    checkstyle {
        toolVersion = '6.12.1'
    }

    checkstyle {
        configFile = rootProject.file('checkstyle.xml')
        configProperties.checkStyleConfigDir = rootProject.rootDir
    }

    task checkstyle(type: Checkstyle) {
        source 'src'
        include '**/*.java'
        exclude '**/gen/**'

        // empty classpath
        classpath = files()
    }

    afterEvaluate {
        if (project.tasks.findByName('check')) {
            check.dependsOn('checkstyle')
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.1'
    //noinspection UnnecessaryQualifiedReference
    distributionType = Wrapper.DistributionType.ALL
}

